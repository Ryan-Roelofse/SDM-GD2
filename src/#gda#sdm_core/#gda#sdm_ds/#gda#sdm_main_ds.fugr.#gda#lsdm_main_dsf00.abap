*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 05.09.2019 at 10:42:43 by user RROELOFSE
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: /GDA/SDM_DS01_V.................................*
FORM GET_DATA_/GDA/SDM_DS01_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GDA/SDM_DS01 WHERE
(VIM_WHERETAB) .
    CLEAR /GDA/SDM_DS01_V .
/GDA/SDM_DS01_V-MANDT =
/GDA/SDM_DS01-MANDT .
/GDA/SDM_DS01_V-DS_TYPE_ID =
/GDA/SDM_DS01-DS_TYPE_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS01T WHERE
DS_TYPE_ID = /GDA/SDM_DS01-DS_TYPE_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS01_V-DS_TYPE_ID_DESC =
/GDA/SDM_DS01T-DS_TYPE_ID_DESC .
    ENDIF.
<VIM_TOTAL_STRUC> = /GDA/SDM_DS01_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GDA/SDM_DS01_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GDA/SDM_DS01_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GDA/SDM_DS01_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS01 WHERE
  DS_TYPE_ID = /GDA/SDM_DS01_V-DS_TYPE_ID .
    IF SY-SUBRC = 0.
    DELETE /GDA/SDM_DS01 .
    ENDIF.
    DELETE FROM /GDA/SDM_DS01T WHERE
    DS_TYPE_ID = /GDA/SDM_DS01-DS_TYPE_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS01 WHERE
  DS_TYPE_ID = /GDA/SDM_DS01_V-DS_TYPE_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GDA/SDM_DS01.
    ENDIF.
/GDA/SDM_DS01-MANDT =
/GDA/SDM_DS01_V-MANDT .
/GDA/SDM_DS01-DS_TYPE_ID =
/GDA/SDM_DS01_V-DS_TYPE_ID .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS01 .
    ELSE.
    INSERT /GDA/SDM_DS01 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS01T WHERE
    DS_TYPE_ID = /GDA/SDM_DS01-DS_TYPE_ID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GDA/SDM_DS01T.
/GDA/SDM_DS01T-DS_TYPE_ID =
/GDA/SDM_DS01-DS_TYPE_ID .
/GDA/SDM_DS01T-SPRAS =
SY-LANGU .
      ENDIF.
/GDA/SDM_DS01T-DS_TYPE_ID_DESC =
/GDA/SDM_DS01_V-DS_TYPE_ID_DESC .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS01T .
    ELSE.
    INSERT /GDA/SDM_DS01T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GDA/SDM_DS01_V-UPD_FLAG,
STATUS_/GDA/SDM_DS01_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GDA/SDM_DS01_V.
  SELECT SINGLE * FROM /GDA/SDM_DS01 WHERE
DS_TYPE_ID = /GDA/SDM_DS01_V-DS_TYPE_ID .
/GDA/SDM_DS01_V-MANDT =
/GDA/SDM_DS01-MANDT .
/GDA/SDM_DS01_V-DS_TYPE_ID =
/GDA/SDM_DS01-DS_TYPE_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS01T WHERE
DS_TYPE_ID = /GDA/SDM_DS01-DS_TYPE_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS01_V-DS_TYPE_ID_DESC =
/GDA/SDM_DS01T-DS_TYPE_ID_DESC .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GDA/SDM_DS01_V-DS_TYPE_ID_DESC .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GDA/SDM_DS01_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GDA/SDM_DS01_V-DS_TYPE_ID TO
/GDA/SDM_DS01-DS_TYPE_ID .
MOVE /GDA/SDM_DS01_V-MANDT TO
/GDA/SDM_DS01-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS01'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS01 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS01'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GDA/SDM_DS01-DS_TYPE_ID TO
/GDA/SDM_DS01T-DS_TYPE_ID .
MOVE SY-LANGU TO
/GDA/SDM_DS01T-SPRAS .
MOVE /GDA/SDM_DS01_V-MANDT TO
/GDA/SDM_DS01T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS01T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS01T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS01T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GDA/SDM_DS02_V.................................*
FORM GET_DATA_/GDA/SDM_DS02_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GDA/SDM_DS02 WHERE
(VIM_WHERETAB) .
    CLEAR /GDA/SDM_DS02_V .
/GDA/SDM_DS02_V-MANDT =
/GDA/SDM_DS02-MANDT .
/GDA/SDM_DS02_V-DS_DESIG_ID =
/GDA/SDM_DS02-DS_DESIG_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS02T WHERE
DS_DESIG_ID = /GDA/SDM_DS02-DS_DESIG_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS02_V-DS_DESIG_ID_DESC =
/GDA/SDM_DS02T-DS_DESIG_ID_DESC .
    ENDIF.
<VIM_TOTAL_STRUC> = /GDA/SDM_DS02_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GDA/SDM_DS02_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GDA/SDM_DS02_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GDA/SDM_DS02_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS02 WHERE
  DS_DESIG_ID = /GDA/SDM_DS02_V-DS_DESIG_ID .
    IF SY-SUBRC = 0.
    DELETE /GDA/SDM_DS02 .
    ENDIF.
    DELETE FROM /GDA/SDM_DS02T WHERE
    DS_DESIG_ID = /GDA/SDM_DS02-DS_DESIG_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS02 WHERE
  DS_DESIG_ID = /GDA/SDM_DS02_V-DS_DESIG_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GDA/SDM_DS02.
    ENDIF.
/GDA/SDM_DS02-MANDT =
/GDA/SDM_DS02_V-MANDT .
/GDA/SDM_DS02-DS_DESIG_ID =
/GDA/SDM_DS02_V-DS_DESIG_ID .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS02 .
    ELSE.
    INSERT /GDA/SDM_DS02 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS02T WHERE
    DS_DESIG_ID = /GDA/SDM_DS02-DS_DESIG_ID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GDA/SDM_DS02T.
/GDA/SDM_DS02T-DS_DESIG_ID =
/GDA/SDM_DS02-DS_DESIG_ID .
/GDA/SDM_DS02T-SPRAS =
SY-LANGU .
      ENDIF.
/GDA/SDM_DS02T-DS_DESIG_ID_DESC =
/GDA/SDM_DS02_V-DS_DESIG_ID_DESC .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS02T .
    ELSE.
    INSERT /GDA/SDM_DS02T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GDA/SDM_DS02_V-UPD_FLAG,
STATUS_/GDA/SDM_DS02_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GDA/SDM_DS02_V.
  SELECT SINGLE * FROM /GDA/SDM_DS02 WHERE
DS_DESIG_ID = /GDA/SDM_DS02_V-DS_DESIG_ID .
/GDA/SDM_DS02_V-MANDT =
/GDA/SDM_DS02-MANDT .
/GDA/SDM_DS02_V-DS_DESIG_ID =
/GDA/SDM_DS02-DS_DESIG_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS02T WHERE
DS_DESIG_ID = /GDA/SDM_DS02-DS_DESIG_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS02_V-DS_DESIG_ID_DESC =
/GDA/SDM_DS02T-DS_DESIG_ID_DESC .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GDA/SDM_DS02_V-DS_DESIG_ID_DESC .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GDA/SDM_DS02_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GDA/SDM_DS02_V-DS_DESIG_ID TO
/GDA/SDM_DS02-DS_DESIG_ID .
MOVE /GDA/SDM_DS02_V-MANDT TO
/GDA/SDM_DS02-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS02'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS02 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS02'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GDA/SDM_DS02-DS_DESIG_ID TO
/GDA/SDM_DS02T-DS_DESIG_ID .
MOVE SY-LANGU TO
/GDA/SDM_DS02T-SPRAS .
MOVE /GDA/SDM_DS02_V-MANDT TO
/GDA/SDM_DS02T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS02T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS02T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS02T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GDA/SDM_DS03_V.................................*
FORM GET_DATA_/GDA/SDM_DS03_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GDA/SDM_DS03 WHERE
(VIM_WHERETAB) .
    CLEAR /GDA/SDM_DS03_V .
/GDA/SDM_DS03_V-MANDT =
/GDA/SDM_DS03-MANDT .
/GDA/SDM_DS03_V-DS_LINK_ID =
/GDA/SDM_DS03-DS_LINK_ID .
/GDA/SDM_DS03_V-DS_TYPE_ID =
/GDA/SDM_DS03-DS_TYPE_ID .
/GDA/SDM_DS03_V-DS_DESIG_ID =
/GDA/SDM_DS03-DS_DESIG_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS03T WHERE
DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS03_V-DS_LINK_ID_DESC =
/GDA/SDM_DS03T-DS_LINK_ID_DESC .
    ENDIF.
<VIM_TOTAL_STRUC> = /GDA/SDM_DS03_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GDA/SDM_DS03_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GDA/SDM_DS03_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GDA/SDM_DS03_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS03 WHERE
  DS_LINK_ID = /GDA/SDM_DS03_V-DS_LINK_ID .
    IF SY-SUBRC = 0.
    DELETE /GDA/SDM_DS03 .
    ENDIF.
    DELETE FROM /GDA/SDM_DS03T WHERE
    DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS03 WHERE
  DS_LINK_ID = /GDA/SDM_DS03_V-DS_LINK_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GDA/SDM_DS03.
    ENDIF.
/GDA/SDM_DS03-MANDT =
/GDA/SDM_DS03_V-MANDT .
/GDA/SDM_DS03-DS_LINK_ID =
/GDA/SDM_DS03_V-DS_LINK_ID .
/GDA/SDM_DS03-DS_TYPE_ID =
/GDA/SDM_DS03_V-DS_TYPE_ID .
/GDA/SDM_DS03-DS_DESIG_ID =
/GDA/SDM_DS03_V-DS_DESIG_ID .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS03 .
    ELSE.
    INSERT /GDA/SDM_DS03 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS03T WHERE
    DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GDA/SDM_DS03T.
/GDA/SDM_DS03T-DS_LINK_ID =
/GDA/SDM_DS03-DS_LINK_ID .
/GDA/SDM_DS03T-SPRAS =
SY-LANGU .
      ENDIF.
/GDA/SDM_DS03T-DS_LINK_ID_DESC =
/GDA/SDM_DS03_V-DS_LINK_ID_DESC .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS03T .
    ELSE.
    INSERT /GDA/SDM_DS03T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GDA/SDM_DS03_V-UPD_FLAG,
STATUS_/GDA/SDM_DS03_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GDA/SDM_DS03_V.
  SELECT SINGLE * FROM /GDA/SDM_DS03 WHERE
DS_LINK_ID = /GDA/SDM_DS03_V-DS_LINK_ID .
/GDA/SDM_DS03_V-MANDT =
/GDA/SDM_DS03-MANDT .
/GDA/SDM_DS03_V-DS_LINK_ID =
/GDA/SDM_DS03-DS_LINK_ID .
/GDA/SDM_DS03_V-DS_TYPE_ID =
/GDA/SDM_DS03-DS_TYPE_ID .
/GDA/SDM_DS03_V-DS_DESIG_ID =
/GDA/SDM_DS03-DS_DESIG_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS03T WHERE
DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS03_V-DS_LINK_ID_DESC =
/GDA/SDM_DS03T-DS_LINK_ID_DESC .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GDA/SDM_DS03_V-DS_LINK_ID_DESC .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GDA/SDM_DS03_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GDA/SDM_DS03_V-DS_LINK_ID TO
/GDA/SDM_DS03-DS_LINK_ID .
MOVE /GDA/SDM_DS03_V-MANDT TO
/GDA/SDM_DS03-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS03'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS03 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS03'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GDA/SDM_DS03-DS_LINK_ID TO
/GDA/SDM_DS03T-DS_LINK_ID .
MOVE SY-LANGU TO
/GDA/SDM_DS03T-SPRAS .
ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GDA/SDM_DS03_V2................................*
FORM GET_DATA_/GDA/SDM_DS03_V2.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GDA/SDM_DS03 WHERE
(VIM_WHERETAB) .
    CLEAR /GDA/SDM_DS03_V2 .
/GDA/SDM_DS03_V2-MANDT =
/GDA/SDM_DS03-MANDT .
/GDA/SDM_DS03_V2-DS_LINK_ID =
/GDA/SDM_DS03-DS_LINK_ID .
/GDA/SDM_DS03_V2-DS_TYPE_ID =
/GDA/SDM_DS03-DS_TYPE_ID .
/GDA/SDM_DS03_V2-DS_DESIG_ID =
/GDA/SDM_DS03-DS_DESIG_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS03T WHERE
DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS03_V2-DS_LINK_ID_DESC =
/GDA/SDM_DS03T-DS_LINK_ID_DESC .
    ENDIF.
<VIM_TOTAL_STRUC> = /GDA/SDM_DS03_V2.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GDA/SDM_DS03_V2 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GDA/SDM_DS03_V2.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GDA/SDM_DS03_V2-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS03 WHERE
  DS_LINK_ID = /GDA/SDM_DS03_V2-DS_LINK_ID .
    IF SY-SUBRC = 0.
    DELETE /GDA/SDM_DS03 .
    ENDIF.
    DELETE FROM /GDA/SDM_DS03T WHERE
    DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS03 WHERE
  DS_LINK_ID = /GDA/SDM_DS03_V2-DS_LINK_ID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GDA/SDM_DS03.
    ENDIF.
/GDA/SDM_DS03-MANDT =
/GDA/SDM_DS03_V2-MANDT .
/GDA/SDM_DS03-DS_LINK_ID =
/GDA/SDM_DS03_V2-DS_LINK_ID .
/GDA/SDM_DS03-DS_TYPE_ID =
/GDA/SDM_DS03_V2-DS_TYPE_ID .
/GDA/SDM_DS03-DS_DESIG_ID =
/GDA/SDM_DS03_V2-DS_DESIG_ID .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS03 .
    ELSE.
    INSERT /GDA/SDM_DS03 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS03T WHERE
    DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /GDA/SDM_DS03T.
/GDA/SDM_DS03T-DS_LINK_ID =
/GDA/SDM_DS03-DS_LINK_ID .
/GDA/SDM_DS03T-SPRAS =
SY-LANGU .
      ENDIF.
/GDA/SDM_DS03T-DS_LINK_ID_DESC =
/GDA/SDM_DS03_V2-DS_LINK_ID_DESC .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS03T .
    ELSE.
    INSERT /GDA/SDM_DS03T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GDA/SDM_DS03_V2-UPD_FLAG,
STATUS_/GDA/SDM_DS03_V2-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GDA/SDM_DS03_V2.
  SELECT SINGLE * FROM /GDA/SDM_DS03 WHERE
DS_LINK_ID = /GDA/SDM_DS03_V2-DS_LINK_ID .
/GDA/SDM_DS03_V2-MANDT =
/GDA/SDM_DS03-MANDT .
/GDA/SDM_DS03_V2-DS_LINK_ID =
/GDA/SDM_DS03-DS_LINK_ID .
/GDA/SDM_DS03_V2-DS_TYPE_ID =
/GDA/SDM_DS03-DS_TYPE_ID .
/GDA/SDM_DS03_V2-DS_DESIG_ID =
/GDA/SDM_DS03-DS_DESIG_ID .
    SELECT SINGLE * FROM /GDA/SDM_DS03T WHERE
DS_LINK_ID = /GDA/SDM_DS03-DS_LINK_ID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
/GDA/SDM_DS03_V2-DS_LINK_ID_DESC =
/GDA/SDM_DS03T-DS_LINK_ID_DESC .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR /GDA/SDM_DS03_V2-DS_LINK_ID_DESC .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GDA/SDM_DS03_V2 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GDA/SDM_DS03_V2-DS_LINK_ID TO
/GDA/SDM_DS03-DS_LINK_ID .
MOVE /GDA/SDM_DS03_V2-MANDT TO
/GDA/SDM_DS03-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS03'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS03 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS03'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /GDA/SDM_DS03-DS_LINK_ID TO
/GDA/SDM_DS03T-DS_LINK_ID .
MOVE SY-LANGU TO
/GDA/SDM_DS03T-SPRAS .
ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GDA/SDM_DS04_V.................................*
FORM GET_DATA_/GDA/SDM_DS04_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GDA/SDM_DS04 WHERE
(VIM_WHERETAB) .
    CLEAR /GDA/SDM_DS04_V .
/GDA/SDM_DS04_V-MANDT =
/GDA/SDM_DS04-MANDT .
/GDA/SDM_DS04_V-DS_LINK_ID =
/GDA/SDM_DS04-DS_LINK_ID .
/GDA/SDM_DS04_V-TABNAME =
/GDA/SDM_DS04-TABNAME .
/GDA/SDM_DS04_V-FIELDNAME =
/GDA/SDM_DS04-FIELDNAME .
<VIM_TOTAL_STRUC> = /GDA/SDM_DS04_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GDA/SDM_DS04_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GDA/SDM_DS04_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GDA/SDM_DS04_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS04 WHERE
  DS_LINK_ID = /GDA/SDM_DS04_V-DS_LINK_ID AND
  TABNAME = /GDA/SDM_DS04_V-TABNAME AND
  FIELDNAME = /GDA/SDM_DS04_V-FIELDNAME .
    IF SY-SUBRC = 0.
    DELETE /GDA/SDM_DS04 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS04 WHERE
  DS_LINK_ID = /GDA/SDM_DS04_V-DS_LINK_ID AND
  TABNAME = /GDA/SDM_DS04_V-TABNAME AND
  FIELDNAME = /GDA/SDM_DS04_V-FIELDNAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GDA/SDM_DS04.
    ENDIF.
/GDA/SDM_DS04-MANDT =
/GDA/SDM_DS04_V-MANDT .
/GDA/SDM_DS04-DS_LINK_ID =
/GDA/SDM_DS04_V-DS_LINK_ID .
/GDA/SDM_DS04-TABNAME =
/GDA/SDM_DS04_V-TABNAME .
/GDA/SDM_DS04-FIELDNAME =
/GDA/SDM_DS04_V-FIELDNAME .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS04 .
    ELSE.
    INSERT /GDA/SDM_DS04 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GDA/SDM_DS04_V-UPD_FLAG,
STATUS_/GDA/SDM_DS04_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GDA/SDM_DS04_V.
  SELECT SINGLE * FROM /GDA/SDM_DS04 WHERE
DS_LINK_ID = /GDA/SDM_DS04_V-DS_LINK_ID AND
TABNAME = /GDA/SDM_DS04_V-TABNAME AND
FIELDNAME = /GDA/SDM_DS04_V-FIELDNAME .
/GDA/SDM_DS04_V-MANDT =
/GDA/SDM_DS04-MANDT .
/GDA/SDM_DS04_V-DS_LINK_ID =
/GDA/SDM_DS04-DS_LINK_ID .
/GDA/SDM_DS04_V-TABNAME =
/GDA/SDM_DS04-TABNAME .
/GDA/SDM_DS04_V-FIELDNAME =
/GDA/SDM_DS04-FIELDNAME .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GDA/SDM_DS04_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GDA/SDM_DS04_V-DS_LINK_ID TO
/GDA/SDM_DS04-DS_LINK_ID .
MOVE /GDA/SDM_DS04_V-TABNAME TO
/GDA/SDM_DS04-TABNAME .
MOVE /GDA/SDM_DS04_V-FIELDNAME TO
/GDA/SDM_DS04-FIELDNAME .
MOVE /GDA/SDM_DS04_V-MANDT TO
/GDA/SDM_DS04-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS04'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS04 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS04'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: /GDA/SDM_DS05_V.................................*
FORM GET_DATA_/GDA/SDM_DS05_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GDA/SDM_DS05 WHERE
(VIM_WHERETAB) .
    CLEAR /GDA/SDM_DS05_V .
/GDA/SDM_DS05_V-MANDT =
/GDA/SDM_DS05-MANDT .
/GDA/SDM_DS05_V-DS_LINK_ID =
/GDA/SDM_DS05-DS_LINK_ID .
/GDA/SDM_DS05_V-TABNAME =
/GDA/SDM_DS05-TABNAME .
/GDA/SDM_DS05_V-FIELDNAME =
/GDA/SDM_DS05-FIELDNAME .
/GDA/SDM_DS05_V-VALUE =
/GDA/SDM_DS05-VALUE .
    SELECT SINGLE * FROM /GDA/SDM_DS03 WHERE
DS_LINK_ID = /GDA/SDM_DS05-DS_LINK_ID .
    IF SY-SUBRC EQ 0.
    ENDIF.
<VIM_TOTAL_STRUC> = /GDA/SDM_DS05_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GDA/SDM_DS05_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GDA/SDM_DS05_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GDA/SDM_DS05_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS05 WHERE
  DS_LINK_ID = /GDA/SDM_DS05_V-DS_LINK_ID AND
  TABNAME = /GDA/SDM_DS05_V-TABNAME AND
  FIELDNAME = /GDA/SDM_DS05_V-FIELDNAME AND
  VALUE = /GDA/SDM_DS05_V-VALUE .
    IF SY-SUBRC = 0.
    DELETE /GDA/SDM_DS05 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS05 WHERE
  DS_LINK_ID = /GDA/SDM_DS05_V-DS_LINK_ID AND
  TABNAME = /GDA/SDM_DS05_V-TABNAME AND
  FIELDNAME = /GDA/SDM_DS05_V-FIELDNAME AND
  VALUE = /GDA/SDM_DS05_V-VALUE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GDA/SDM_DS05.
    ENDIF.
/GDA/SDM_DS05-MANDT =
/GDA/SDM_DS05_V-MANDT .
/GDA/SDM_DS05-DS_LINK_ID =
/GDA/SDM_DS05_V-DS_LINK_ID .
/GDA/SDM_DS05-TABNAME =
/GDA/SDM_DS05_V-TABNAME .
/GDA/SDM_DS05-FIELDNAME =
/GDA/SDM_DS05_V-FIELDNAME .
/GDA/SDM_DS05-VALUE =
/GDA/SDM_DS05_V-VALUE .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS05 .
    ELSE.
    INSERT /GDA/SDM_DS05 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GDA/SDM_DS05_V-UPD_FLAG,
STATUS_/GDA/SDM_DS05_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GDA/SDM_DS05_V.
  SELECT SINGLE * FROM /GDA/SDM_DS05 WHERE
DS_LINK_ID = /GDA/SDM_DS05_V-DS_LINK_ID AND
TABNAME = /GDA/SDM_DS05_V-TABNAME AND
FIELDNAME = /GDA/SDM_DS05_V-FIELDNAME AND
VALUE = /GDA/SDM_DS05_V-VALUE .
/GDA/SDM_DS05_V-MANDT =
/GDA/SDM_DS05-MANDT .
/GDA/SDM_DS05_V-DS_LINK_ID =
/GDA/SDM_DS05-DS_LINK_ID .
/GDA/SDM_DS05_V-TABNAME =
/GDA/SDM_DS05-TABNAME .
/GDA/SDM_DS05_V-FIELDNAME =
/GDA/SDM_DS05-FIELDNAME .
/GDA/SDM_DS05_V-VALUE =
/GDA/SDM_DS05-VALUE .
    SELECT SINGLE * FROM /GDA/SDM_DS03 WHERE
DS_LINK_ID = /GDA/SDM_DS05-DS_LINK_ID .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GDA/SDM_DS05_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GDA/SDM_DS05_V-DS_LINK_ID TO
/GDA/SDM_DS05-DS_LINK_ID .
MOVE /GDA/SDM_DS05_V-TABNAME TO
/GDA/SDM_DS05-TABNAME .
MOVE /GDA/SDM_DS05_V-FIELDNAME TO
/GDA/SDM_DS05-FIELDNAME .
MOVE /GDA/SDM_DS05_V-VALUE TO
/GDA/SDM_DS05-VALUE .
MOVE /GDA/SDM_DS05_V-MANDT TO
/GDA/SDM_DS05-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS05'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS05 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS05'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_/GDA/SDM_DS05_V USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
/GDA/SDM_DS05-MANDT =
/GDA/SDM_DS05_V-MANDT .
/GDA/SDM_DS05-DS_LINK_ID =
/GDA/SDM_DS05_V-DS_LINK_ID .
/GDA/SDM_DS05-TABNAME =
/GDA/SDM_DS05_V-TABNAME .
/GDA/SDM_DS05-FIELDNAME =
/GDA/SDM_DS05_V-FIELDNAME .
/GDA/SDM_DS05-VALUE =
/GDA/SDM_DS05_V-VALUE .
    SELECT SINGLE * FROM /GDA/SDM_DS03 WHERE
DS_LINK_ID = /GDA/SDM_DS05-DS_LINK_ID .
    IF SY-SUBRC EQ 0.
    ELSE.
      CLEAR SY-SUBRC.
    ENDIF.
ENDFORM.
*...processing: /GDA/SDM_DS06_V.................................*
FORM GET_DATA_/GDA/SDM_DS06_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /GDA/SDM_DS06 WHERE
(VIM_WHERETAB) .
    CLEAR /GDA/SDM_DS06_V .
/GDA/SDM_DS06_V-MANDT =
/GDA/SDM_DS06-MANDT .
/GDA/SDM_DS06_V-DS_LINK_ID =
/GDA/SDM_DS06-DS_LINK_ID .
/GDA/SDM_DS06_V-UNAME =
/GDA/SDM_DS06-UNAME .
<VIM_TOTAL_STRUC> = /GDA/SDM_DS06_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_/GDA/SDM_DS06_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO /GDA/SDM_DS06_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_/GDA/SDM_DS06_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS06 WHERE
  DS_LINK_ID = /GDA/SDM_DS06_V-DS_LINK_ID AND
  UNAME = /GDA/SDM_DS06_V-UNAME .
    IF SY-SUBRC = 0.
    DELETE /GDA/SDM_DS06 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /GDA/SDM_DS06 WHERE
  DS_LINK_ID = /GDA/SDM_DS06_V-DS_LINK_ID AND
  UNAME = /GDA/SDM_DS06_V-UNAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /GDA/SDM_DS06.
    ENDIF.
/GDA/SDM_DS06-MANDT =
/GDA/SDM_DS06_V-MANDT .
/GDA/SDM_DS06-DS_LINK_ID =
/GDA/SDM_DS06_V-DS_LINK_ID .
/GDA/SDM_DS06-UNAME =
/GDA/SDM_DS06_V-UNAME .
    IF SY-SUBRC = 0.
    UPDATE /GDA/SDM_DS06 .
    ELSE.
    INSERT /GDA/SDM_DS06 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_/GDA/SDM_DS06_V-UPD_FLAG,
STATUS_/GDA/SDM_DS06_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_/GDA/SDM_DS06_V.
  SELECT SINGLE * FROM /GDA/SDM_DS06 WHERE
DS_LINK_ID = /GDA/SDM_DS06_V-DS_LINK_ID AND
UNAME = /GDA/SDM_DS06_V-UNAME .
/GDA/SDM_DS06_V-MANDT =
/GDA/SDM_DS06-MANDT .
/GDA/SDM_DS06_V-DS_LINK_ID =
/GDA/SDM_DS06-DS_LINK_ID .
/GDA/SDM_DS06_V-UNAME =
/GDA/SDM_DS06-UNAME .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_/GDA/SDM_DS06_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE /GDA/SDM_DS06_V-DS_LINK_ID TO
/GDA/SDM_DS06-DS_LINK_ID .
MOVE /GDA/SDM_DS06_V-UNAME TO
/GDA/SDM_DS06-UNAME .
MOVE /GDA/SDM_DS06_V-MANDT TO
/GDA/SDM_DS06-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/GDA/SDM_DS06'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /GDA/SDM_DS06 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/GDA/SDM_DS06'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
